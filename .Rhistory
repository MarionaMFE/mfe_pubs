list(theme(plot.title = element_text(family = font_family,
colour = "#000000",
size = font_size_title,
face = "bold",
hjust = 0.5),
plot.subtitle = element_text(family = font_family,
colour = "#000000",
size = font_size_body,
face = "plain",
hjust = 0.5),
plot.caption = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
face = "plain",
hjust = 0.99),
plot.margin = margin(t = 5, l = 5, b = 5,                                                                                                                                                             r = 20), panel.border = element_blank(), panel.spacing = unit(2.5,
"lines"), panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "#D3D3D3",
size = 0.2),
panel.grid.minor.y = element_blank(),
panel.background = element_rect(colour = "white", fill = "white"),
strip.background = element_rect(colour = "white", fill = "white"),
text = element_text(family = font_family,
colour = "#323232",
size = font_size_body),
strip.text = element_text(family = font_family,
colour = "#323232",
size = font_size_body),
## axis formats
axis.title.x = element_text(family = font_family,
colour = "#323232", size = font_size_body, margin = margin(t = 10)),
axis.title.y = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
margin = margin(r = 10)),
axis.text.x = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
angle = 90),
axis.text.y = element_text(family = font_family,
colour = "#323232",
hjust = 1,
size = font_size_body),
axis.line = element_line(colour = "#323232",
size = 0.3),
axis.ticks = element_line(colour = "#323232",
size = 0.3),
### legend format
legend.text = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
margin = margin(r = 10),
hjust = 0),
legend.title =  element_blank(),
legend.position = "bottom", legend.margin = margin(t = 20,
b = 20),
legend.key = element_rect(fill = "white"),
legend.key.height = unit(5, "mm"), legend.key.width = unit(5,
"mm")))
}
theme_mfe()
ggplot(iris, aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point() +
theme_mfe()
theme_mfe2 <- function (font_family = "Helvetica", font_size_title = 11, font_size_body = 10, horizontal = FALSE)
{
if (horizontal == FALSE){ axis.text.x = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
angle = 90)
} else {
axis.text.x = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
angle = 0)
}
list(theme(plot.title = element_text(family = font_family,
colour = "#000000",
size = font_size_title,
face = "bold",
hjust = 0.5),
plot.subtitle = element_text(family = font_family,
colour = "#000000",
size = font_size_body,
face = "plain",
hjust = 0.5),
plot.caption = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
face = "plain",
hjust = 0.99),
plot.margin = margin(t = 5, l = 5, b = 5,                                                                                                                                                             r = 20), panel.border = element_blank(), panel.spacing = unit(2.5,
"lines"), panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "#D3D3D3",
size = 0.2),
panel.grid.minor.y = element_blank(),
panel.background = element_rect(colour = "white", fill = "white"),
strip.background = element_rect(colour = "white", fill = "white"),
text = element_text(family = font_family,
colour = "#323232",
size = font_size_body),
strip.text = element_text(family = font_family,
colour = "#323232",
size = font_size_body),
## axis formats
axis.title.x = element_text(family = font_family,
colour = "#323232", size = font_size_body, margin = margin(t = 10)),
axis.title.y = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
margin = margin(r = 10)),
axis.text.x = axis.text.x,
axis.text.y = element_text(family = font_family,
colour = "#323232",
hjust = 1,
size = font_size_body),
axis.line = element_line(colour = "#323232",
size = 0.3),
axis.ticks = element_line(colour = "#323232",
size = 0.3),
### legend format
legend.text = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
margin = margin(r = 10),
hjust = 0),
legend.title =  element_blank(),
legend.position = "bottom", legend.margin = margin(t = 20,
b = 20),
legend.key = element_rect(fill = "white"),
legend.key.height = unit(5, "mm"), legend.key.width = unit(5,
"mm")))
}
}
theme_mfe2 <- function (font_family = "Helvetica", font_size_title = 11, font_size_body = 10, horizontal = FALSE)
{
if (horizontal == FALSE){ axis.text.x = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
angle = 90)
} else {
axis.text.x = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
angle = 0)
}
list(theme(plot.title = element_text(family = font_family,
colour = "#000000",
size = font_size_title,
face = "bold",
hjust = 0.5),
plot.subtitle = element_text(family = font_family,
colour = "#000000",
size = font_size_body,
face = "plain",
hjust = 0.5),
plot.caption = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
face = "plain",
hjust = 0.99),
plot.margin = margin(t = 5, l = 5, b = 5,                                                                                                                                                             r = 20), panel.border = element_blank(), panel.spacing = unit(2.5,
"lines"), panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "#D3D3D3",
size = 0.2),
panel.grid.minor.y = element_blank(),
panel.background = element_rect(colour = "white", fill = "white"),
strip.background = element_rect(colour = "white", fill = "white"),
text = element_text(family = font_family,
colour = "#323232",
size = font_size_body),
strip.text = element_text(family = font_family,
colour = "#323232",
size = font_size_body),
## axis formats
axis.title.x = element_text(family = font_family,
colour = "#323232", size = font_size_body, margin = margin(t = 10)),
axis.title.y = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
margin = margin(r = 10)),
axis.text.x = axis.text.x,
axis.text.y = element_text(family = font_family,
colour = "#323232",
hjust = 1,
size = font_size_body),
axis.line = element_line(colour = "#323232",
size = 0.3),
axis.ticks = element_line(colour = "#323232",
size = 0.3),
### legend format
legend.text = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
margin = margin(r = 10),
hjust = 0),
legend.title =  element_blank(),
legend.position = "bottom", legend.margin = margin(t = 20,
b = 20),
legend.key = element_rect(fill = "white"),
legend.key.height = unit(5, "mm"), legend.key.width = unit(5,
"mm")))
}
}
theme_mfe2 <- function (font_family = "Helvetica", font_size_title = 11, font_size_body = 10, horizontal = FALSE)
{
if (horizontal == FALSE){ axis.text.x = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
angle = 90)
} else {
axis.text.x = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
angle = 0)
}
list(theme(plot.title = element_text(family = font_family,
colour = "#000000",
size = font_size_title,
face = "bold",
hjust = 0.5),
plot.subtitle = element_text(family = font_family,
colour = "#000000",
size = font_size_body,
face = "plain",
hjust = 0.5),
plot.caption = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
face = "plain",
hjust = 0.99),
plot.margin = margin(t = 5, l = 5, b = 5,                                                                                                                                                             r = 20), panel.border = element_blank(), panel.spacing = unit(2.5,
"lines"), panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "#D3D3D3",
size = 0.2),
panel.grid.minor.y = element_blank(),
panel.background = element_rect(colour = "white", fill = "white"),
strip.background = element_rect(colour = "white", fill = "white"),
text = element_text(family = font_family,
colour = "#323232",
size = font_size_body),
strip.text = element_text(family = font_family,
colour = "#323232",
size = font_size_body),
## axis formats
axis.title.x = element_text(family = font_family,
colour = "#323232", size = font_size_body, margin = margin(t = 10)),
axis.title.y = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
margin = margin(r = 10)),
axis.text.x = axis.text.x,
axis.text.y = element_text(family = font_family,
colour = "#323232",
hjust = 1,
size = font_size_body),
axis.line = element_line(colour = "#323232",
size = 0.3),
axis.ticks = element_line(colour = "#323232",
size = 0.3),
### legend format
legend.text = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
margin = margin(r = 10),
hjust = 0),
legend.title =  element_blank(),
legend.position = "bottom", legend.margin = margin(t = 20,
b = 20),
legend.key = element_rect(fill = "white"),
legend.key.height = unit(5, "mm"), legend.key.width = unit(5,
"mm")))
}
ggplot(iris, aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point() +
theme_mfe2()
theme_mfe2 <- function (font_family = "Helvetica", font_size_title = 11, font_size_body = 10, horizontal = TRUE)
{
if (horizontal == FALSE){ axis.text.x = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
angle = 90)
} else {
axis.text.x = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
angle = 0)
}
list(theme(plot.title = element_text(family = font_family,
colour = "#000000",
size = font_size_title,
face = "bold",
hjust = 0.5),
plot.subtitle = element_text(family = font_family,
colour = "#000000",
size = font_size_body,
face = "plain",
hjust = 0.5),
plot.caption = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
face = "plain",
hjust = 0.99),
plot.margin = margin(t = 5, l = 5, b = 5,                                                                                                                                                             r = 20), panel.border = element_blank(), panel.spacing = unit(2.5,
"lines"), panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "#D3D3D3",
size = 0.2),
panel.grid.minor.y = element_blank(),
panel.background = element_rect(colour = "white", fill = "white"),
strip.background = element_rect(colour = "white", fill = "white"),
text = element_text(family = font_family,
colour = "#323232",
size = font_size_body),
strip.text = element_text(family = font_family,
colour = "#323232",
size = font_size_body),
## axis formats
axis.title.x = element_text(family = font_family,
colour = "#323232", size = font_size_body, margin = margin(t = 10)),
axis.title.y = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
margin = margin(r = 10)),
axis.text.x = axis.text.x,
axis.text.y = element_text(family = font_family,
colour = "#323232",
hjust = 1,
size = font_size_body),
axis.line = element_line(colour = "#323232",
size = 0.3),
axis.ticks = element_line(colour = "#323232",
size = 0.3),
### legend format
legend.text = element_text(family = font_family,
colour = "#323232",
size = font_size_body,
margin = margin(r = 10),
hjust = 0),
legend.title =  element_blank(),
legend.position = "bottom", legend.margin = margin(t = 20,
b = 20),
legend.key = element_rect(fill = "white"),
legend.key.height = unit(5, "mm"), legend.key.width = unit(5,
"mm")))
}
ggplot(iris, aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point() +
theme_mfe2()
setwd('./mfePubs')
getwd()
document()
devtools::document()
setwd('..')
install('mfePubs')
devtools::install('mfePubs')
library(mfePubs)
ggplot(iris, aes(x= Sepal.Width, y = Sepal.Length)) + geom_point() + theme_mfe(horizontal = TRUE)
ggplot(iris, aes(x= Sepal.Width, y = Sepal.Length)) + geom_point() + theme_mfe(horizontal = FALSE)
ggplot(iris, aes(x= Sepal.Width, y = Sepal.Length)) + geom_point() + theme_mfe(font_family = 'Calibri', horizontal = FALSE)
ggplot(iris, aes(x= Sepal.Width, y = Sepal.Length)) + geom_point() + theme_mfe(font_family = 'Calibri', horizontal = TRUE)
ggplot(iris, aes(x= Sepal.Width, y = Sepal.Length)) + geom_point() + theme_mfe(font_family = 'Calibri', horizontal = FALSE)
getwd()
setwd('./mfePubs')
devtools::document()
setwd('..')
install('mfePubs')
devtools::install('mfePubs')
library(mfePubs)
ggplot(iris, aes(x= Sepal.Length, y = Sepal.Width)) + geom_point() + theme_mfe(horizontal = TRUE)
ggplot(iris, aes(x= Sepal.Length, y = Sepal.Width)) + geom_point() + theme_mfe(horizontal = FALSE)
getwd()
install('mfePubs')
devtools::install('mfePubs')
ls()
library(mfePubs)
theme_mfe()
ggplot(iris, aes(x= Sepal.Width, y = Sepal.Lenght)) + geom_point() + theme_mfe()
ggplot(iris, aes(x= Sepal.Width, y = Sepal.Length)) + geom_point() + theme_mfe()
ggplot(iris, aes(x= Sepal.Width, y = Sepal.Length)) + geom_point() + theme_mfe(horizontal= TRUE)
library(stringr)
library(Unicode)
library(htmltools)
mac <- function(x){
if (x == "a") {
result <- paste("\u101", sep = "")
} else if (x == "A") {
result <- paste("\u100", sep = "")
} else if (x == "e") {
result <- paste("\u113", sep = "")
} else if (x == "E") {
result <- paste("\u112", sep = "")
} else if (x == "i") {
result <- paste("\u12b", sep = "")
} else if (x == "I") {
result <- paste("\u12a", sep = "")
} else if (x == "o") {
result <- paste("\u14d", sep = "")
} else if (x == "O") {
result <- paste("\u14c", sep = "")
} else if (x == "u") {
result <- paste("\u16b", sep = "")
} else if (x == "U") {
result <- paste("\u16a", sep = "")
} else (print("Entry not recognised"))
return(result)
# return(sentenceString = trimws(result))
# paste((result), sep = "")
# paste(trimws(result))
}
mac("E")
# Doesn't work yet
p("T",mac("e"),"n\u101 koe. Welcome. This site presents data about resource management received and processed by local authorities under the Resource Management Act (RMA).")
# Works if you do this but this is obviously not what we want, tried to do this through the function and failed.
p(paste0("T",mac("e"),"n\u101 koe. Welcome. This site presents data about resource management received and processed by local authorities under the Resource Management Act (RMA).", sep = ""))
s <- p('T',mac("e"),'n',mac("a"),' koe. Welcome.')
a <- p(mac("a"),mac("A"),mac("e"),mac("E"),mac("i"),mac("I"),mac("o"),mac("O"),mac("u"),mac("U"))
print(s)
print(a)
mac("E")
mac(O)
mac('O')
print('M', mac('o'), 'rena')
print(paste0('M', mac('o'), 'rena'))
ggplot(iris, aes(x = Sepal.Lenght , y= Sepal.Width)) +geom_point()+ggtitle(paste0('M', mac('O'), 'rena'))
library(tidyverse)
ggplot(iris, aes(x = Sepal.Lenght , y= Sepal.Width)) +geom_point()+ggtitle(paste0('M', mac('O'), 'rena'))
ggplot(iris, aes(x = Sepal.Length , y= Sepal.Width)) +geom_point()+ggtitle(paste0('M', mac('O'), 'rena'))
ggplot(iris, aes(x = Sepal.Lenght , y= Sepal.Width)) +geom_point()+ggtitle(paste0('M', mac('o'), 'rena'))
ggplot(iris, aes(x = Sepal.Lenght , y= Sepal.Width)) +geom_point()+ggtitle(paste0('M', mac('o'), 'rena'))
ggplot(iris, aes(x = Sepal.Length , y= Sepal.Width)) +geom_point()+ggtitle(paste0('M', mac('o'), 'rena'))
s <- p('T',mac("e"),'n',mac("a"),' koe. Welcome.')
s
a <- p(mac("a"),mac("A"),mac("e"),mac("E"),mac("i"),mac("I"),mac("o"),mac("O"),mac("u"),mac("U"))
a
getwd()
setwd('./mfePubs')
devtools::document
devtools::document()
setwd('..')
install('mfePubs')
devtools::install('mfePubs')
library(mfePubs)
mac()
maori_land <- read.csv('C:/Working/MfEPubs_tutorial/www/data/use-of-maori-land-livestock-200616.csv')
maori_land
head(maori_land)
maori_land <- maori_land %>% select(region, year, livestock, livestock_numbers)
library(tidyverse)
maori_land <- maori_land %>% select(region, year, livestock, livestock_numbers)
maori_land
save(maori_land, file= 'data/maori_land.RData')
getwd()
devtools::document()
setwd('..')
devtools::install('mfePubs')
library(mfePubs)
data(maori_land)
force(maori_land)
remove.packages('mfePubs')
devtools::install('MarionaMFE/mfe_pubs')
devtools::install_github('MarionaMFE/mfe_pubs')
library(mfePubs)
data(maori_land)
theme_mfe()
library(mfePubs)
library(tidyverse)
library(reshape2)
library(tidyverse)
library(lubridate)
# load the kaya dataset attached with mfePubs package
data(kaya)
# tidy data (transpose it)
kaya %>%
rownames_to_column %>%
gather(variable, value, -rowname) %>%
spread(rowname, value) -> spread_table
# change variable names
names(spread_table) <- c('year', 'population', 'gdp_per_capita', 'co2', 'energy_per_gdp', 'co2_per_energy')
# remove first line and make 'year' a numeric variable
spread_table %>%
filter(year != 'X') %>%
mutate(year = as.numeric(str_remove(year, 'X'))) %>%
select (-co2) -> spread_table
data_long <- melt(spread_table, id = 'year')
kayaplot <- ggplot(data_long, aes(x = year, y = as.numeric(value), colour = variable)) +
geom_line(size = 1.5) +
ggtitle('Kaya identity, New Zealand, 1990-2018') +
ylab('base 100') +
xlab('year') +
scale_x_continuous(n.breaks=length(unique(data_long$year))/5)
kayaplot
kayaplot + theme_mfe()
theme_mfe()
kayaplot + theme_mfe(horizontal = TRUE)
theme_mfe()
remove.packages('mfePubs')
devtools::install_github('MarionaMFE/mfe_pubs')
theme_mfe()
theme_mfe()
data("maori_land")
data('kaya')
mfe_colours
scales::show_col(mfe_colours)
scales::show_col(unname(unlist(mfe_colours))
)
force(maori_land)
force(maori_land)
View(maori_land)
force(kaya)
View(maori_land)
View(kaya)
View(maori_land)
